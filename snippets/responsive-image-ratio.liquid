{%- comment -%}
    It creates a style tag and it restricts an image from growing larger than its max resolution.
    Dependencies:
    - Lazysizes plugin (https://github.com/aFarkas/lazysizes) which enable responsive image with faster load time and better performance.
    - Lazysizes Responsive Images as a Service (https://github.com/aFarkas/lazysizes/tree/gh-pages/plugins/rias) To load the correct image size with our CDN
    - Lazysizes Bgset (https://github.com/aFarkas/lazysizes/tree/gh-pages/plugins/bgset) To use responsive images on background-image (CSS)
    Accepts:
    - ratio: width of the result image devided by its height
    - image: {Object} Image object
    - image_class: {String} class name of the <img />
    - image_attributes: {String}  additional HTML attributes of the <img />
    - wrapper_class: {String} class name of the <div> wrapper
    - wrapper_attributes: {String} additional HTML attributes of the <div> wrapper
    Usage:
    In your liquid template file, copy the following line
    - {% include 'responsive-image' with image: featured_image, image_class: "css-class", wrapper_class: "wrapper-css-class", ratio: 2 %}
{%- endcomment -%}

{%- comment -%} Added incremental number to avoid conflict styling code when the same images are using this snippet {%- endcomment -%}
{%- capture responsive_image_counter %}{% increment responsive_image_counter %}{% endcapture -%}

<style>
  #Image-{{ image.id }}-{{ responsive_image_counter }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  #ImageInnerWrapper-{{ image.id }}-{{ responsive_image_counter }} {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
  #ImageWrapper-{{ image.id }}-{{ responsive_image_counter }} {
    width: 100%;
    position: relative;
  }
  #ImageWrapper-{{ image.id }}-{{ responsive_image_counter }}::before {
    padding-top:{{ 100 | divided_by: ratio }}%;
    content: '';
    display: block;
    
  }
</style>

{%- assign img_url = image | img_url: '1x1', crop: 'center' | replace: '_1x1_', '_{width}x{height}_' -%}

{%- comment -%} Limit image widths to valid options based on image.width {%- endcomment -%}
{%- assign image_widths = '180,360,540,720,900,1080,1296,1512,1728,1944,2160,2376,2592,2808,3024' | split: ',' -%}
{%- capture image_widths -%}
  {%- for width in image_widths -%}
    {%- comment -%} Check if image width is less or equal to width {%- endcomment -%}
    {%- assign width_num = width | plus: 0 | round -%}
    {%- assign height_num = width_num | divided_by: ratio | floor -%}
    {%- if image.width >= width_num and image.height >= height_num -%}{{ width_num }},{%- endif -%}
  {%- endfor -%}
  {%- if ratio >= image.aspect_ratio -%}
    {{- image.width -}}
  {%- else -%}
    {{ image.height | times: ratio | floor }}
  {%- endif -%}
{%- endcapture -%}
{%- assign image_widths = image_widths | strip -%}

{% assign placeholder_image_width = 300 %}
{% assign placeholder_image_height = placeholder_image_width | divided_by: ratio | floor %}
{% assign placeholder_image_size = placeholder_image_width | append: 'x' | append: placeholder_image_height %}

<div id="ImageWrapper-{{ image.id }}-{{ responsive_image_counter }}" data-image-id="{{ image.id }}" class="responsive-image__wrapper {{ wrapper_class }}" {{ wrapper_attributes }}>
  <div id="ImageInnerWrapper-{{ image.id }}-{{ responsive_image_counter }}">
    <img id="Image-{{ image.id }}-{{ responsive_image_counter }}"
      class="lazyload {{ image_class }}"
      src="{{ image | img_url: placeholder_image_size, crop: 'center' }}"
      data-src="{{ img_url }}"
      data-widths="[{{ image_widths }}]"
      data-aspectratio="{{ ratio }}"
      data-sizes="auto"
      tabindex="-1"
      alt="{{ image.alt | escape }}"
      {{ image_attributes }}
    >
  </div>
</div>

<noscript>
  <img class="{{ image_class }}" src="{{ image | img_url: '2048x2048' }}" alt="{{ image.alt | escape }}">
</noscript>